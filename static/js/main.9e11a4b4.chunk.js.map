{"version":3,"sources":["components/Character.js","components/Episode.js","components/Season.js","components/Series.js","App.js","reportWebVitals.js","index.js"],"names":["Character","props","useState","show","setShow","info","setInfo","handleClick","handleSeasonClick","season","setOpenEpisode","setOpenSeason","useEffect","fetch","name","replace","then","res","json","data","Button","variant","onClick","block","className","Container","Row","Col","xs","md","Image","src","img","rounded","occupation","status","nickname","portrayed","category","ButtonGroup","aria-label","appearance","map","app","index","better_call_saul_appearance","Episode","title","openEpisode","seasonSetOpen","size","style","borderRadius","backgroundColor","id","margin","textAlign","padding","fontSize","fontWeight","air_date","split","episode","series","characters","character","sOS","Season","open","setOpen","seriesName","number","console","log","marginTop","Series","items","setItems","link","result","seasons","max","i","length","push","Jumbotron","color","border","marginBottom","openS","setS","filter","String","App","openSeason","setSeason","Navbar","borderBottom","Brand","href","Nav","Form","inline","FormControl","type","placeholder","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e11a4b4.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\n\nexport default function Character(props) {\n    const [show, setShow] = useState(false);\n    const [info, setInfo] = useState({});\n\n    useEffect(() => {\n        fetch(\"https://tarea-1-breaking-bad.herokuapp.com/api/characters?name=\"+props.name.replace(\" \",\"+\"))\n            .then((res) => res.json())\n            .then((data) => {setInfo(data[0])})\n    })\n\n    function handleClick() {\n        setShow(!show)\n    }\n\n    function handleSeasonClick(season) {\n        props.setOpenEpisode(\"\")\n        props.setOpenSeason(season)\n    }\n\n    if (show) {\n        return (\n            <span>\n                     <Button variant=\"outline-primary\" \n                    onClick= {handleClick}\n                    block\n                    >\n                 {props.name}\n                </Button>)        \n               \n            <div className=\"pop-up-window\">\n                <div className=\"pop-up-content\">\n                  \n                    <button className=\"close-button\" onClick={handleClick}>x</button>\n                    <Container>\n                        <Row>\n                        <Col xs={6} md={4}>\n      <Image src={info.img} rounded />\n    </Col>\n                        <Col>  <div>Nombre: {info.name}</div>\n                        <div>Ocupaci√≥n: {info.occupation}</div>\n                        <div>Estado: {info.status}</div>\n                        <div>Apodo: {info.nickname}</div>\n                        <div>Actor(a): {info.portrayed}</div>    \n                        <div>Series: {info.category}</div>\n                        <div>Temporadas en Breaking Bad: </div>\n                        <ButtonGroup aria-label=\"Basic example\">\n                        {info.appearance.map((app,index)=>(<Button variant=\"primary\" onClick={() => handleSeasonClick(\"Breaking Bad\"+app)}>{app}</Button>))}\n                        </ButtonGroup>\n                        <div>Temporadas Better Call Saul:</div>\n                        <ButtonGroup aria-label=\"Basic example\">\n                        {info.better_call_saul_appearance.map((app,index)=>(<Button variant=\"primary\" onClick={() => handleSeasonClick(\"Better Call Saul\"+app)}>{app}</Button>))}\n                        </ButtonGroup>\n                </Col>\n                </Row>\n                    </Container>\n                   \n                </div>\n            </div>\n            </span>\n        )\n    }\n    else{\n        return (\n            <Button variant=\"outline-primary\" \n                    onClick= {handleClick}\n                    block\n                    >\n                 {props.name}\n                </Button>)            \n\n    }\n}","import React from \"react\";\nimport Character from \"./Character\"\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\n\nfunction Episode(props) {\n    function handleClick() {\n        if (props.info.title !== props.openEpisode) {\n            props.seasonSetOpen(props.info.title)  \n        }\n        else{\n            props.seasonSetOpen(\"\")\n        }\n             \n    }\n    if (props.info.title===props.openEpisode) {\n        return(\n            <div>\n                  <Button variant=\"primary\" \n                size=\"md\" \n                block\n                onClick= {handleClick}\n                key={props.info.id}\n                style={{borderRadius:\"0\", backgroundColor:\"black\"}}\n                >\n            {props.info.title}\n            </Button>\n     \n            <Container>\n                <Container style={{margin:\"10px\"}}>\n                    <Row>\n                        <Col style={{textAlign:\"center\", padding:\"0px\"}}>\n                        <div className=\"ep-info\" style={{fontSize:\"2em\", fontWeight:\"bold\", textAlign:\"center\"}}>T√≠tulo: {props.info.title}</div>\n                        <div className=\"ep-info\" style={{fontSize:\"2em\", fontWeight:\"bold\", textAlign:\"center\"}}>{props.info.air_date.split(\"T\")[0]}</div>\n            \n                        <div style={{fontSize:\"2em\", fontWeight:\"bold\", textAlign:\"center\"}}>N¬∞ episodio: {props.info.episode}</div>\n                        <div className=\"ep-info\" style={{fontSize:\"2em\", fontWeight:\"bold\", textAlign:\"center\"}}>Temporada: {props.info.season}</div>\n                        <div className=\"ep-info\" style={{fontSize:\"2em\", fontWeight:\"bold\", textAlign:\"center\"}}>{props.info.series}</div>\n                        </Col>\n\n                        <Col>\n                        {props.info.characters.map((character,index)=>(\n                             <Character name={character} setOpenSeason={props.sOS} setOpenEpisode={props.seasonSetOpen}/>))}\n                        </Col>\n                    </Row>\n                </Container>\n              \n        \n            </Container>\n            </div>\n        )\n        \n    }\n    else {\n        return(\n         \n          \n            <Button variant=\"primary\" \n                size=\"md\" \n                block\n                onClick= {handleClick}\n                key={props.info.id}\n                style={{borderRadius:\"0\", backgroundColor:\"black\"}}\n                >\n            {props.info.title}\n            </Button>\n\n        )\n    }\n}\n\nexport default Episode","import React, {useState} from \"react\";\nimport Episode from \"./Episode\";\nimport { Container } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\n\nfunction Season(props) {\n    const [open, setOpen] = useState(\"\");\n    function handleClick(){\n        setOpen(\"\")\n        if (props.seriesName+props.number !== props.open) {\n            props.setOpenSeason(props.seriesName+props.number)\n            console.log(props.seriesName+props.number);\n        }\n        else{\n            props.setOpenSeason(\"\")\n\n        }\n    }\n    if (props.seriesName+props.number === props.open) {\n        return(\n            <Container>\n                \n                <Button variant=\"primary\" \n                        size=\"lg\" \n                        block\n                        style={{marginTop:\"10px\"}}\n                        onClick={() => handleClick()} \n                        key={props.seriesName+props.number}\n                        >\n                    Temporada {props.number}\n                </Button> \n                {props.data.map((episode, index) =>(\n                    <div>\n                    <Episode key={episode.title} info={episode} seasonSetOpen={setOpen} sOS={props.setOpenSeason} openEpisode={open}/>\n                    </div>   \n                )\n                )}\n            </Container>\n        )\n    }\n    else {\n        return(\n            <Container>\n                <Button variant=\"primary\" \n                        size=\"lg\" \n                        block\n                        style={{marginTop:\"10px\"}}\n                        onClick={() => handleClick()} \n                        key={props.seriesName+props.number}\n                        >\n                    Temporada {props.number}\n                </Button>\n         \n            </Container>\n            )\n        };\n}\n\nexport default Season\n\n","import React, {useState, useEffect} from \"react\"\nimport { Container } from \"react-bootstrap\";\nimport Season from \"./Season\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\n\nfunction Series(props) {\n\n    const [items, setItems] = useState([]);\n    useEffect(() => {\n      fetch(props.link)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setItems(result);\n          })\n    },[props.link]);\n    let seasons = [];\n    let max = 0\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].season>max) {\n        seasons.push(i+1);\n        max = items[i].season\n      }}\n      \n    return (\n      <Container>\n        <Jumbotron style={{color:\"white\", backgroundColor:\"black\", border:\"2px solid #0069d9\"}}>\n          <Container>\n            <h1>{props.name}</h1>\n          </Container>\n        </Jumbotron>\n        <Container style={{marginBottom:\"30px\"}}>\n        {seasons.map((season,index) =>(\n            <Season key={props.name+index}\n                    seriesName={props.name} \n                    number={index+1} \n                    open={props.openS}  \n                    setOpenSeason={props.setS}\n                    data={items.filter(episode => episode.season === String(index+1))}/>\n        ))}\n        </Container>\n      </Container>\n    );\n    \n}\n\nexport default Series;","\nimport './App.css';\nimport React, {useState} from \"react\"\nimport Series from \"./components/Series\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  const [openSeason, setSeason] = useState(\"\")\n  return(\n  <div>\n    <Navbar style={{backgroundColor:\"black\", borderBottom:\"2px solid white\"}}>\n    <Navbar.Brand href=\"#home\" style={{color:\"white\"}}>Tarea 1</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n     \n    </Nav>\n    <Form inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n      <Button variant=\"outline-info\">Search</Button>\n    </Form>\n  </Navbar>\n  <Container style={{width:\"100%\"}}>\n    <Series link=\"https://tarea-1-breaking-bad.herokuapp.com/api/episodes?series=Better+Call+Saul\" \n            name=\"Better Call Saul\" \n            openS={openSeason} \n            setS={setSeason}/>\n    <Series link=\"https://tarea-1-breaking-bad.herokuapp.com/api/episodes?series=Breaking+Bad\" \n            name=\"Breaking Bad\" \n            openS={openSeason} \n            setS={setSeason}/>\n  </Container>\n  </div>\n  \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}